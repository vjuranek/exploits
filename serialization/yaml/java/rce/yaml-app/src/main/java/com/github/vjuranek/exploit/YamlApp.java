package com.github.vjuranek.exploit;

import org.yaml.snakeyaml.Yaml;
import org.yaml.snakeyaml.constructor.Construct;
import org.yaml.snakeyaml.constructor.Constructor;
import org.yaml.snakeyaml.constructor.SafeConstructor;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Map;

/**
 * Your great app using yaml.
 *
 */
public class YamlApp {
    public static void main(String[] args) throws IllegalArgumentException, IOException {
        if (args.length != 1) {
            throw new IllegalArgumentException("Provide one argument, name of the config file");
        }

        YamlApp app = new YamlApp();

        // path relative to the dir from which app is run
        String cfgPath = System.getProperty("user.dir") + "/" + args[0];
        InputStream is = new FileInputStream(new File(cfgPath));

        ArrayList<Map<String, String>> appCfg = app.loadConfig(is);
        // ArrayList<Map<String, String>> appCfg = app.safeLoadConfig(is);
        // ArrayList<Map<String, String>> appCfg = app.customSafeLoadConfig(is);

        for (Map<String, String> cfg : appCfg){
            System.out.println(cfg);
        }
    }

    private ArrayList<Map<String, String>> loadConfig(InputStream is) throws IOException {
        Yaml yaml = new Yaml();
        return yaml.load(is);
    }

    private ArrayList<Map<String, String>> safeLoadConfig(InputStream is) throws IOException {
        SafeConstructor yamlConstructor = new SafeConstructor();
        Yaml yaml = new Yaml(yamlConstructor);
        return yaml.load(is);
    }

    private ArrayList<Map<String, String>> customSafeLoadConfig(InputStream is) throws IOException {
        MySafeConstructor yamlConstructor = new MySafeConstructor();
        Yaml yaml = new Yaml(yamlConstructor);
        return yaml.load(is);
    }

}
